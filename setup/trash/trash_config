#Docker
docker__channel: ["stable"]
docker__package_dependencies:
  - "apt-transport-https"
  - "ca-certificates"
  - "cron"
  - "gnupg2"
  - "software-properties-common"
docker__pip_dependencies:
  - "gcc"
  - "python3-setuptools"
  - "python3-dev"
  - "python3-pip"
  - "virtualenv"
docker__architecture_map:
  "x86_64": "amd64"
  "aarch": "arm64"
  "armhf": "armhf"
  "armv7l": "armhf"
docker__apt_key_id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
docker__apt_key_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
docker__apt_repository: >
  deb [arch={{ docker__architecture_map[ansible_architecture] }}]
  https://download.docker.com/linux/{{ ansible_distribution | lower }}
  {{ ansible_distribution_release }} {{ docker__channel | join (' ') }}
docker__users: ["{{ ansible_env.SUDO_USER | d('root') }}"].




#Gitlab
gitlab_runner_system_mode: yes
gitlab_runner_config_file: /etc/gitlab-runner/config.toml
gitlab_runner_config_file_location: "{{ gitlab_runner_config_file | dirname }}"
#Gitlab Register 
gitlab_runner_name: 'test_start'
gitlab_runner_state: present
gitlab_runner_coordinator_url: "https://gitlab.codica.com/"
gitlab_runner_registration_token: "E3XEPWsm7tBcRi6GTzNj"
gitlab_runner_executor: "docker+machine"
gitlab_runner_docker_image: "alpine"
gitlab_runner_limit: 
# s3_server_address: ""
# s3_access_key: "qweqweqweqw"
# s3_secret_key: "qwe12e123123Aasdasd151d6a51sda"
# s3_bucket_name: ""
# s3_bucket_location: "eu-central-1"
# docker_volume: ""
# docker_cache: ""
# docker_idle_nodes: ""
# idle_time: ""
# max_builds: ""
# machine_name: ""


      command: >
        gitlab-runner register 
        --non-interactive 
        --url '{{ gitlab_runner_coordinator_url }}' 
        --registration-token '{{ gitlab_runner_registration_token }}' 
        --description '{{ gitlab_runner_name }}' 
        --tag-list '' 
        --executor '{{ gitlab_runner_executor|default("docker+machine") }}' 
        --limit '{{ gitlab_runner_limit|default(2) }}' 
        --docker-image '{{ gitlab_runner_docker_image|default("alpine") }}'
        --cache-s3-server-address '{{ gitlab_runner_s3_server_address|default("s3.amazonaws.com") }}'
        --cache-s3-access-key '{{ gitlab_runner_s3_access_key }}'
        --cache-s3-secret-key '{{ gitlab_runner_s3_secret_key }}'
        --cache-s3-bucket-name '{{ gitlab_runner_s3_bucket_name|default(gitlab_runner_name) }}'
        --cache-s3-bucket-location '{{ gitlab_runner_s3_bucket_location }}'
        --docker-volumes '{{ gitlab_runner_docker_volume|default(["/var/run/docker.sock:/var/run/docker.sock", "/cache"]) }}'
        --docker-disable-cache '{{ gitlab_runner_docker_cache|default(true) }}'
        --docker-privileged '{{ gitlab_runner_docker_privileged|default(true) }}'
        --machine-idle-nodes '{{ gitlab_runner_idle_nodes|default(1) }}'
        --machine-idle-time '{{ gitlab_runner_idle_time|default(1800) }}'
        --machine-max-builds '{{ gitlab_runner_max_builds|default(100) }}'
        --machine-machine-driver '{{ gitlab_runner_driver|default("amazonec2") }}'
        --machine-machine-name '{{ gitlab_runner_machine_name|default("gitlab-docker-machine-%s") }}'
        --machine-machine-options '{{ gitlab_runner_amazonec2_access_key }}'
        --machine-machine-options '{{ gitlab_runner_amazonec2_secret_key }}'
        --run-untagged 'true' 
        --locked 'false' 
        --access-level 'not_protected'
      when: configured_runners.stdout.find("{{ gitlab_runner_name }}") == -1